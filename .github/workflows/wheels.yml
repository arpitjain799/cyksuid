# Stolen from pyzmq project
# PyZMQ is licensed under the terms of the Modified BSD License (also known as
# New or Revised BSD), as follows:
#
# Copyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# Neither the name of PyZMQ nor the names of its contributors may be used to
# endorse or promote products derived from this software without specific prior
# written permission.
#
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name: Release

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - setup.py
      - .github/workflows/wheels.yml
  release:

env:
  cython: "0.29.21"
  cibuildwheel: "1.6.4"
  TWINE_NONINTERACTIVE: "1"

jobs:
  sdist:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: install dependencies
        run: |
          pip install --upgrade pip build
          pip install cython=="${{ env.cython }}"
      - name: build sdist
        run: |
          python setup.py build --with-cython
          python -m build --sdist .
      - uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: "dist/*.tar.gz"
          if-no-files-found: error

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine upload --skip-existing dist/*.tar.gz

  wheel:
    runs-on: ${{ matrix.os }}

    env:
      CIBW_TEST_REQUIRES: "pytest"
      CIBW_TEST_COMMAND: "pytest -v {package}/tests"
      CIBW_SKIP: "cp2* cp35* pp2*"
      CIBW_BUILD: "${{ matrix.cibw.build || '*' }}"
      CIBW_MANYLINUX_X86_64_IMAGE: "${{ matrix.cibw.manylinux_image }}"
      CIBW_MANYLINUX_I686_IMAGE: "${{ matrix.cibw.manylinux_image }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-10.15
            name: mac

          - os: ubuntu-20.04
            name: manylinux1
            cibw:
              build: "cp36* cp37*"
              manylinux_image: manylinux1

          - os: ubuntu-20.04
            name: manylinux2010
            cibw:
              build: "cp38* cp39*"
              manylinux_image: manylinux2010

          - os: windows-2019
            name: win32
            cibw:
              build: "*win32"

          - os: windows-2019
            name: win_amd64
            cibw:
              build: "*win_amd64"

    steps:
      - uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install cibuildwheel=="${{ env.cibuildwheel }}" cython=="${{ env.cython }}"
      - name: install mac dependencies
        if: startsWith(matrix.os, 'mac')
        run: |
          pip install delocate
      - name: install linux dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install auditwheel
      - name: show environment
        run: |
          pip freeze
      - name: list target wheels
        run: |
          python -m cibuildwheel . --print-build-identifiers
      - name: compile Cython sources
        run: |
          python setup.py build --with-cython
      - name: build wheels
        run: |
          python -m cibuildwheel .
      - uses: actions/upload-artifact@v2
        with:
          name: wheels-${{ matrix.name }}
          path: "wheelhouse/*"
          if-no-files-found: error

      - name: Publish wheels to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine upload --skip-existing wheelhouse/*
